[tool.poetry]
name = "graphql-core"
version = "3.3.0a1"
description = """
GraphQL-core is a Python port of GraphQL.js,\
 the JavaScript reference implementation for GraphQL."""
license = "MIT"
authors = ["Christoph Zwerschke <cito@online.de>"]
readme = "README.md"
homepage = "https://github.com/graphql-python/graphql-core"
repository = "https://github.com/graphql-python/graphql-core"
documentation = "https://graphql-core-3.readthedocs.io/"
keywords = ["graphql"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]
packages = [
    { include = "graphql", from = "src" },
    { include = "tests", format = "sdist" },
    { include = "docs", format = "sdist" },
    { include = ".bumpversion.cfg", format = "sdist" },
    { include = ".editorconfig", format = "sdist" },
    { include = ".flake8", format = "sdist" },
    { include = ".readthedocs.yaml", format = "sdist" },
    { include = "poetry.lock", format = "sdist" },
    { include = "tox.ini", format = "sdist" },
    { include = "CODEOWNERS", format = "sdist" },
    { include = "SECURITY.md", format = "sdist" }
]

[tool.poetry.urls]
Changelog = "https://github.com/graphql-python/graphql-core/releases"

[tool.poetry.dependencies]
python = "^3.7"
typing-extensions = [
    { version = "^4.3", python = "<3.8" }
]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1"
pytest-asyncio = ">=0.20,<1"
pytest-benchmark = "^3.4"
pytest-cov = "^4.0"
pytest-describe = "^2.0"
pytest-timeout = "^2.1"
tox = "^3.26"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "22.10.0"
flake8 = "^5.0"
flake8-bandit = "^4.1"
flake8-bugbear = "22.9.23"
isort = "^5.10"
mypy = "0.982"
bump2version = ">=1.0,<2"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
# Sphinx >= 4.4 has conflicting dependencies with Flake8
sphinx = ">= 4.3,<6"
sphinx_rtd_theme = ">=1,<2"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
target-version = ["py37", "py38", "py39", "py310"]

[tool.coverage.run]
branch = true
source = ["src", "tests"]
omit = [
    "*/conftest.py",
    "*/test_*_fuzz.py",
    "*/assert_valid_name.py",
    "*/cached_property.py",
    "*/character_classes.py",
    "*/is_iterable.py",
    "*/subscription/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "except ImportError:",
    "# Python <",
    "raise NotImplementedError",
    'raise TypeError\(f?"Unexpected',
    "assert False,",
    '\s+next\($',
    "if MYPY:",
    "if TYPE_CHECKING:",
    '^\s+\.\.\.$',
    '^\s+pass$'
]
ignore_errors = true

[tool.isort]
src_paths = ["src", "tests"]
skip_glob = ["src/**/__init__.py"]
profile = "black"
force_single_line = false
lines_after_imports = 2

[tool.mypy]
python_version = 3.9
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "graphql.pyutils.frozen_dict",
    "graphql.pyutils.frozen_list",
    "graphql.type.introspection",
    "tests.*"
]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.1"
# Only run benchmarks as tests.
# To actually run the benchmarks, use --benchmark-enable on the command line.
# To run the slow tests (fuzzing), add --run-slow on the command line.
addopts = "--benchmark-disable"
# Deactivate default name pattern for test classes (we use pytest_describe).
python_classes = "PyTest*"
# Handle all async fixtures and tests automatically by asyncio
asyncio_mode = "auto"
# Set a timeout in seconds for aborting tests that run too long.
timeout = "100"
# Ignore config options not (yet) available in older Python versions.
filterwarnings = "ignore::pytest.PytestConfigWarning"

[build-system]
requires = ["poetry_core>=1.2,<2"]
build-backend = "poetry.core.masonry.api"
